Конструкция if-else

var a = 3;

/*
	Если переменная a больше нуля, то выведи 'верно',
	иначе (если меньше или равна нулю) выведи 'неверно'
*/
if (a > 0) {alert('Верно!');} else {alert('Неверно!');} //выведет 'Верно!'
__________________________________________________________________________

Сокращенный синтаксис
В случае, если в фигурных скобках if или else будет только одно выражение, можно эти фигурные скобки не писать:

//Полный вариант:
if (a == 0) {alert('Верно!');} else {alert('Неверно!');}

//Уберем скобки после if:
if (a == 0) alert('Верно!'); else {alert('Неверно!');}

//Уберем скобки после else:
if (a == 0) {alert('Верно!');} else alert('Неверно!');

/*
	Уберем скобки и после if, и после else
	(обратите внимание на точку с запятой - она осталась):
*/
if (a == 0) alert('Верно!'); else alert('Неверно!'); 

____________________________________________________________________________

Равенство по значению и типу

Для того, чтобы сравнить на равенство следует использовать оператор двойное равно ==,
 а не одиночное =, как можно было подумать.

Почему так? Потому что одиночное равно зарезервировано за присваиванием. Смотрите пример:
 var a = 0;
/*
	Если переменная a равна нулю, то выведи 'верно',
	иначе (если не равна нулю) выведи 'неверно'
*/
if (a == 0) alert('Верно!'); else alert('Неверно!'); //выведет 'Верно!'
А следующий пример работать будет не так, как мы думаем:
var a = 0;
/*
	Мы думаем оно работает так:
		если переменная a равна нулю, то выведи 'верно',
 		иначе (если не равна нулю) выведи 'неверно'.

	На самом деле оно работает так:
		переменной a присвоить 1,
		если удалось присвоить - то выведи 'верно',
		иначе (если не удалось присвоить) выведи 'неверно'.
*/
if (a = 1) alert('Верно!'); else alert('Неверно!'); //всегда будет выводить 'Верно!'

Кроме оператора == существует еще и оператор ===. Их различие в том, 
что === сравнивает не только по значению, но и по типу, а == сравнивает только по значению.

Чтобы полностью разобраться в этом внимательно изучите примеры:

var a = '0'; //переменная a представляет собой строку, а не число 0
if (a == 0) alert('Верно!'); else alert('Неверно!');

/*
	Выведет 'Верно!', так как проверяется только значение, но не тип.
	Поэтому '0' равен 0.
*/



var a = '0'; //переменная a представляет собой строку, а не число 0
if (a === 0) alert('Верно!'); else alert('Неверно!');

/*
	Выведет 'Неверно!', так как строка '0'
 	не равна числу 0 при сравнении по типу.
*/
__________________________________________________________________________

Не равно

Для того, чтобы спросить 'не равно', существует операторы != и !==. Первый игнорирует различие в типах, а второй - нет.

var a = 0;
/*
	Если переменная a НЕ равна нулю, то выведи 'верно',
	иначе (если равна нулю) выведи 'неверно'
*/
if (a != 0) alert('Верно!'); else alert('Неверно!'); //выведет 'Неверно!', так как a равна 0


a = 1;
/*
	Если переменная a НЕ равна нулю, то выведи 'верно',
	иначе (если равна нулю) выведи 'неверно'
*/
if (a != 0) alert('Верно!'); else alert('Неверно!'); //выведет 'Верно!', так как a равна 1


var a = '0';

/*
	Если переменная a НЕ равна нулю, то выведи 'верно',
	иначе (если равна нулю) выведи 'неверно'
*/
if (a != 0) alert('Верно!'); else alert('Неверно!');

/*
	Выведет 'Неверно!', так как a равно '0',
	а различие в типах игнорируется.
*/



var a = '0';
/*
	Если переменная a НЕ равна нулю, то выведи 'верно',
	иначе (если равна нулю) выведи 'неверно'
*/
if (a !== 0) alert('Верно!'); else alert('Неверно!');

/*
	Выведет 'Верно!', так как a равно '0',
 	а это не равно 0 при сравнении по типу.
*/

__________________________________________________________________________


Все операции сравнения
Возможные операции сравнения, которые можно использовать внутри if:


a == b	a равно b
a === b	a равно b и они одинаковы по типу
a != b	a не равно b
a !== b	a не равно b или a равно b, но ни разные по типу
a < b	a меньше b
a > b	a больше b
a <= b	a меньше или равно b
a >= b	a больше или равно b
__________________________________________________________________________


























